#!/bin/bash

## Usage:
## 
##   cdt-clean-server

# Check if the `COLLAGEN` environment variable is set
if [ -z "$COLLAGEN" ]; then
  echo "ERROR The COLLAGEN environment variable has to be set to the 'collagen.git' directory!"
  exit
fi

# Check if lftp is installed
if [ -z "$(which lftp)" ]; then
  echo "ERROR lftp has bo be installed!"
  exit
fi

which lftp

function deval () {
  cmd="$@"
  echo ">>> $cmd"
  eval $cmd
}

function get_host () {
  # Retrive the documentation host 
  # from the collagen settings file `~/.collagen/settings.yaml`

  host_setting_path="documentation.server.host"

  host=$(${COLLAGEN}/bin/cdt-get-setting "${host_setting_path}")

  echo "${host}"
}

function get_remote_path () {
  # Get the remote path from the settings

  # The remote path
  remote_path=$($COLLAGEN/bin/cdt-get-setting 'documentation.server.dir')

  echo "${remote_path}"
}

g_host=$(get_host)
g_remote_path=$(get_remote_path)

function clean_server () {
  # Upload the collagen tarball

  # Check if a path has been found
  if [ -z "${g_remote_path}" ]; then
    echo "ERROR No documentation.server.dir found..."
    exit
  fi

  # Showing the current content:
  deval lftp -c "open ${g_host} -e 'ls -la ${g_remote_path};'"

  # The rm command
  rmcmd="rm -r ${g_remote_path};"

  # Ask user for confirmation
  echo "Are you sure to execute '${rmcmd}' on host '${g_host}'?"
  read -p "[Enter 'yes' to continue]: "
  if [[ ! $REPLY =~ ^yes$ ]]
  then
    echo "Aborting..."
    exit
  fi
  
  # Removing /html/collagen
  deval lftp -c "open -e '${rmcmd}' ${g_host}"

  # Verifying that the file is there:
  deval lftp -c "open ${g_host} -e 'mkdir ${g_remote_path}; ls -la ${g_remote_path};'"

  # Message
  echo "Done." >> /dev/stderr
}

echo ">>> Cleaning the server..."
clean_server

## fin.
