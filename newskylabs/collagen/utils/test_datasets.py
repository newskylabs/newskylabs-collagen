"""newskylabs/collagen/utils/test_datasets.py:

Test datasets.

"""

__author__      = "Dietrich Bollmann"
__email__       = "dietrich@formgames.org"
__copyright__   = "Copyright 2018 Dietrich Bollmann"
__license__     = "Apache License 2.0, http://www.apache.org/licenses/LICENSE-2.0"
__date__        = "2018/02/20"

import numpy as np
from newskylabs.collagen.utils.generic import get_recursively

## =========================================================
## Datasets
## ---------------------------------------------------------

## =========================================================
## Dataset 123
## ---------------------------------------------------------

_dataset_123_images = np.array(

    [ [ [1] ],
      [ [2] ],
      [ [3] ] ]
    
).astype('uint8')

_dataset_123_labels = np.array([1, 2, 3]).astype('uint8')

## =========================================================
## Dataset 2x2
## ---------------------------------------------------------

_dataset_2x2_images = np.array(

    [ [ [0, 0], [0, 0] ],
      [ [1, 1], [1, 1] ],
      [ [2, 2], [2, 2] ],
      [ [3, 3], [3, 3] ],
      [ [4, 4], [4, 4] ],
      [ [5, 5], [5, 5] ],
      [ [6, 6], [6, 6] ],
      [ [7, 7], [7, 7] ],
      [ [8, 8], [8, 8] ],
      [ [9, 9], [9, 9] ] ]
    
).astype('uint8')

_dataset_2x2_labels = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]).astype('uint8')

## =========================================================
## Dataset min1
## ---------------------------------------------------------

_dataset_min1_train_images = np.array(

    [[[10]], [[11]], [[12]], [[13]], [[14]], [[15]], [[16]], [[17]], [[18]], [[19]]]
    
).astype('uint8')

_dataset_min1_train_labels = np.array([
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9
]).astype('uint8')

_dataset_min1_test_images = np.array(

    [[[20]], [[21]], [[22]], [[23]], [[24]], [[25]], [[26]], [[27]], [[28]], [[29]]]
    
).astype('uint8')

_dataset_min1_test_labels = np.array([
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9
]).astype('uint8')
    
## =========================================================
## Dataset min3
## ---------------------------------------------------------

_dataset_min3_train_images = np.array(

    [ [ [0, 1] ], [ [0, 2] ], [ [0, 3] ],
      [ [1, 1] ], [ [1, 2] ], [ [1, 3] ],
      [ [2, 1] ], [ [2, 2] ], [ [2, 3] ],
      [ [3, 1] ], [ [3, 2] ], [ [3, 3] ],
      [ [4, 1] ], [ [4, 2] ], [ [4, 3] ],
      [ [5, 1] ], [ [5, 2] ], [ [5, 3] ],
      [ [6, 1] ], [ [6, 2] ], [ [6, 3] ],
      [ [7, 1] ], [ [7, 2] ], [ [7, 3] ],
      [ [8, 1] ], [ [8, 2] ], [ [8, 3] ],
      [ [9, 1] ], [ [9, 2] ], [ [9, 3] ] ]
    
).astype('uint8')

_dataset_min3_train_labels = np.array([
    0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4,
    5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9
]).astype('uint8')

_dataset_min3_test_images = np.array(

    [ [ [0, 5] ], [ [1, 5] ], [ [2, 5] ], [ [3, 5] ], [ [4, 5] ],
      [ [5, 5] ], [ [6, 5] ], [ [7, 5] ], [ [8, 5] ], [ [9, 5] ],
      [ [0, 6] ], [ [1, 6] ], [ [2, 6] ], [ [3, 6] ], [ [4, 6] ],
      [ [5, 6] ], [ [6, 6] ], [ [7, 6] ], [ [8, 6] ], [ [9, 6] ] ]
    
).astype('uint8')

_dataset_min3_test_labels = np.array([
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9
]).astype('uint8')
    
## =========================================================
## Dataset test_dataset_123
## ---------------------------------------------------------

test_dataset_123 = np.array([1, 2, 3]).astype('uint8')

## =========================================================
## Dataset dataset_digit1x1
## ---------------------------------------------------------

dataset_digit1x1 = {
    
    0: [ [ [0.0] ] ],
    1: [ [ [0.1] ] ],
    2: [ [ [0.2] ] ],
    3: [ [ [0.3] ] ],
    4: [ [ [0.4] ] ],
    5: [ [ [0.5] ] ],
    6: [ [ [0.6] ] ],
    7: [ [ [0.7] ] ],
    8: [ [ [0.8] ] ],
    9: [ [ [0.9] ] ]
}

## =========================================================
## Dataset dataset_digit1x1_3
## ---------------------------------------------------------

dataset_digit1x1_3 = {
    
    0: [ [ [0.01] ], [ [0.02] ], [ [0.03] ] ],
    1: [ [ [0.11] ], [ [0.12] ], [ [0.13] ] ],
    2: [ [ [0.21] ], [ [0.22] ], [ [0.23] ] ],
    3: [ [ [0.31] ], [ [0.32] ], [ [0.33] ] ],
    4: [ [ [0.41] ], [ [0.42] ], [ [0.43] ] ],
    5: [ [ [0.51] ], [ [0.52] ], [ [0.53] ] ],
    6: [ [ [0.61] ], [ [0.62] ], [ [0.63] ] ],
    7: [ [ [0.71] ], [ [0.72] ], [ [0.73] ] ],
    8: [ [ [0.81] ], [ [0.82] ], [ [0.83] ] ],
    9: [ [ [0.91] ], [ [0.92] ], [ [0.93] ] ]
}

## =========================================================
## Dataset dataset_7_5x3
## ---------------------------------------------------------

dataset_7_5x3 = {
    
    7: [ [ [1, 1, 1],
           [0, 0, 1],
           [0, 0, 1],
           [0, 0, 1],
           [0, 0, 1] ],
         
         [ [1, 1, 1],
           [0, 0, 1],
           [0, 1, 0],
           [0, 1, 0],
           [0, 1, 0] ],
         
         [ [1, 1, 1],
           [0, 0, 1],
           [0, 1, 0],
           [1, 0, 0],
           [1, 0, 0] ]
     ]
}
    
## =========================================================
## Dataset dataset_digit5x3
## ---------------------------------------------------------

dataset_digit5x3 = {
    
    0: [ [ [1, 1, 1],
           [1, 0, 1],
           [1, 0, 1],
           [1, 0, 1],
           [1, 1, 1] ] ],
    
    1: [ [ [0, 1, 0],
           [0, 1, 0],
           [0, 1, 0],
           [0, 1, 0],
           [0, 1, 0] ] ],
    
    2: [ [ [1, 1, 1],
           [0, 0, 1],
           [1, 1, 1],
           [1, 0, 0],
           [1, 1, 1] ] ],

    3: [ [ [1, 1, 1],
           [0, 0, 1],
           [1, 1, 1],
           [0, 0, 1],
           [1, 1, 1] ] ],

    4: [ [ [1, 0, 1],
           [1, 0, 1],
           [1, 1, 1],
           [0, 0, 1],
           [0, 0, 1] ] ],

    5: [ [ [1, 1, 1],
           [1, 0, 0],
           [1, 1, 1],
           [0, 0, 1],
           [1, 1, 1] ] ],

    6: [ [ [1, 0, 0],
           [1, 0, 0],
           [1, 1, 1],
           [1, 0, 1],
           [1, 1, 1] ] ],

    7: [ [ [1, 1, 1],
           [0, 0, 1],
           [0, 1, 0],
           [1, 0, 0],
           [1, 0, 0] ] ],

    8: [ [ [1, 1, 1],
           [1, 0, 1],
           [1, 1, 1],
           [1, 0, 1],
           [1, 1, 1] ] ],

    9: [ [ [1, 1, 1],
           [1, 0, 1],
           [1, 1, 1],
           [0, 0, 1],
           [0, 0, 1] ] ]
}

## =========================================================
## Datasets database
## ---------------------------------------------------------

_test_datasets = {

    'min1': {
        'train': {
            'images': _dataset_min1_train_images,
            'labels': _dataset_min1_train_labels
        },
        'test': {
            'images': _dataset_min1_test_images,
            'labels': _dataset_min1_test_labels
        },
    },
    
    'min3': {
        'train': {
            'images': _dataset_min3_train_images,
            'labels': _dataset_min3_train_labels
        },
        'test': {
            'images': _dataset_min3_test_images,
            'labels': _dataset_min3_test_labels
        },
    },
    
    '123': {
        'train': {
            'images': _dataset_123_images,
            'labels': _dataset_123_labels
        },
        'test': {
            'images': _dataset_123_images,
            'labels': _dataset_123_labels
        },
    },
    
    '2x2': {
        'train': {
            'images': _dataset_2x2_images,
            'labels': _dataset_2x2_labels
        },
        'test': {
            'images': _dataset_2x2_images,
            'labels': _dataset_2x2_labels
        },
    }
}

## =========================================================
## Test utility functions
## ---------------------------------------------------------

def get_test_dataset(dataset):
    """Get test datasets."""
    
    return get_recursively(_test_datasets, dataset)

## =========================================================
## =========================================================

## fin.
